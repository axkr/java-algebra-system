(* ----------------------------------------------------------------------------
 * $Id$
 * ----------------------------------------------------------------------------
 * This file is part of MAS.
 * ----------------------------------------------------------------------------
 * Copyright (c) 1989 - 1994 Universitaet Passau
 * ----------------------------------------------------------------------------
 * $Log$
 * Revision 1.1  2000/06/17 20:40:56  kredel
 * Initial revision
 *
 * Revision 1.1.1.1  2000/06/17 20:40:56  kredel
 * Clean import of MAS 1.0 from Uni Passau
 *
 * Revision 1.1  1994/11/03 16:47:56  rose
 * Initial revision.
 * A comparison of the term orders INVLEX and REVITDG,
 *              of the normal strategy and the normal with sugar strategy
 *                 with variable weight list (0,...,0) and (1,...,1) in DIPAGB
 *          and of the functions DIPAGB and DIPGB.
 *
 * ----------------------------------------------------------------------------
 *)


(* Hairer, Runge-Kutta 1, 05.11.83
   from: Boege, W., Gebauer, R., Kredel, H.,
         Some Examples for Solving Systems of Algebraic Equations
         by Calculating Groebner Bases,
         J. Symbolic Computation (1986) 1, 83-96. *)


   OUT("Hairer1.out").

   SWRITE("Example from BGK: Hairer, Runge-Kutta 1, 05.11.83").

   DomainDescriptor := ADDDREAD(). RN.
   VariableList := LIST("C2","C3","B3","B2","B1","A21","A32","A31").
   V := DIPVDEF(VariableList).

   SWRITE("Calculations with inverse lexicographical term order INVLEX:").

      TermOrder := DIPTODEF(2).

      F := DILRD(VariableList,DomainDescriptor).

      ( ( + C2 - A21 )
        ( + C3 - A31 - A32 )
        ( + B1 + B2 + B3 - 1)
        ( + B2 C2 + B3 C3 - 1/2 )
        ( + B2 C2**2 + B3 C3**2 - 1/3 )
        ( + B3 A32 C2 - 1/6 ) )

      DILWR(F,VariableList).

      SetDIPAGBTraceFlag(2).

      (* Groebner basis computation with DIPAGB and normal strategy: *)

         SetDIPAGBStrategy(0).
         WriteDIPAGBOptions.
         DILWR(DIPAGB(F),VariableList).

      (* Groebner basis computation with DIPAGB, normal with sugar strategy
         and variable weight list (0,...,0): *)

         SetDIPAGBStrategy(1).
         SetDIPAGBVariableWeight(LIST(0,0,0,0,0,0,0,0)).
         WriteDIPAGBOptions.
         DILWR(DIPAGB(F),VariableList).

      (* Groebner basis computation with DIPAGB, normal with sugar strategy
         and variable weight list (1,...,1): *)

         r:=RNINT(1).
         SetDIPAGBVariableWeight(LIST(r,r,r,r,r,r,r,r)).
         WriteDIPAGBOptions.
         DILWR(DIPAGB(F),VariableList).

      (* Groebner basis computation with DIPGB: *)

         SWRITE("Groebner Basis Computation with DIPGB:").
         DILWR(DIPGB(F,1),VariableList).


   SWRITE("Calculations with inverse lexicographical term order INVLEX:").

      TermOrder := DIPTODEF(8).

      F := DILRD(VariableList,DomainDescriptor).

      ( ( + C2 - A21 )
        ( + C3 - A31 - A32 )
        ( + B1 + B2 + B3 - 1)
        ( + B2 C2 + B3 C3 - 1/2 )
        ( + B2 C2**2 + B3 C3**2 - 1/3 )
        ( + B3 A32 C2 - 1/6 ) )

      DILWR(F,VariableList).

      SetDIPAGBTraceFlag(2).

      (* Groebner basis computation with DIPAGB and normal strategy: *)

         SetDIPAGBStrategy(0).
         WriteDIPAGBOptions.
         DILWR(DIPAGB(F),VariableList).

      (* Groebner basis computation with DIPAGB, normal with sugar strategy
         and variable weight list (0,...,0): *)

         SetDIPAGBStrategy(1).
         SetDIPAGBVariableWeight(LIST(0,0,0,0,0,0,0,0)).
         WriteDIPAGBOptions.
         DILWR(DIPAGB(F),VariableList).

      (* Groebner basis computation with DIPAGB, normal with sugar strategy
         and variable weight list (1,...,1): *)

         r:=RNINT(1).
         SetDIPAGBVariableWeight(LIST(r,r,r,r,r,r,r,r)).
         WriteDIPAGBOptions.
         DILWR(DIPAGB(F),VariableList).

      (* Groebner basis computation with DIPGB: *)

         SWRITE("Groebner Basis Computation with DIPGB:").
         DILWR(DIPGB(F,1),VariableList).

   SHUT("Hairer1.out").
   EXIT.

(* -EOF- *)

