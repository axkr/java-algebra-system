(* ----------------------------------------------------------------------------
 * $Id$
 * ----------------------------------------------------------------------------
 * This file is part of MAS.
 * ----------------------------------------------------------------------------
 * Copyright (c) 1989 - 1994 Universitaet Passau
 * ----------------------------------------------------------------------------
 * $Log$
 * Revision 1.1  2000/06/17 20:40:56  kredel
 * Initial revision
 *
 * Revision 1.1.1.1  2000/06/17 20:40:56  kredel
 * Clean import of MAS 1.0 from Uni Passau
 *
 * Revision 1.1  1994/11/24 15:18:56  rose
 * Initial revision.
 * DIPAGB test example with domain INT and the inverse lexicographical term
 * order INVLEX.
 * A comparison of the normal strategy and the normal with sugar strategy
 *                 with variable weight list (0,...,0) and (1,...,1) in DIPAGB
 *          and of the functions DIPAGB and DIIFGB.
 *
 * ----------------------------------------------------------------------------
 *)


(* University of Waterloo, 19.03.1984
   Example from Gonnet et al. (1983)
   from: Boege, W., Gebauer, R., Kredel, H.,
         Some Examples for Solving Systems of Algebraic Equations
         by Calculating Groebner Bases,
         J. Symbolic Computation (1986) 1, 83-96. *)


   OUT("Gonnet.out").

   SWRITE("Example from BGK: Example from Gonnet et al. (1983)").

   DomainDescriptor := ADDDREAD(). INT.
   VariableList := LIST("A0",     "A2","A3","A4","A5",
                        "B0","B1","B2","B3","B4","B5",
                        "C0","C1","C2","C3","C4","C5").
   V := DIPVDEF(VariableList).
   TermOrder := DIPTODEF(2).

   F := DILRD(VariableList,DomainDescriptor).

   ( ( A4 B4 )
     ( A5 B1 + B5 + A4 B3 + A3 B4 )
     ( A2 B2 )
     ( A5 B5 )
     ( A0 B2 + B2 + A4 B2 + A2 B4 + C2 + A2 B0 + A2 B1 )
     ( A0 B0 + A0 B1 + A0 B4 + A3 B2 + B0 + B1 + B4 + A4 B0 + A4 B1
       + A2 B5 + A4 B4 + C1 + C4 + A5 B2 + A2 B3 + C0 )
     ( A3 B0 + A0 B3 + A0 B5 + A5 B0 + B3 + B5 + A5 B4 + A4 B3 +
       A4 B5 + A3 B4 + A5 B1 + A3 B1 + C3 + C5 - 1 )
     ( A5 B3 + A5 B5 + A3 B5 + A3 B3 )
     ( A5 B3 + 2 A5 B5 + A3 B5 )
     ( A0 B5 + A5 B0 + A3 B4 + 2 A5 B4 + A5 B1 + B5 + A4 B3
       + 2 A4 B5 + C5 )
     ( A4 B0 + 2 A4 B4 + A2 B5 + B4 + A4 B1 + A5 B2 + A0 B4 + C4 )
     ( A2 B4 + A4 B2 )
     ( A4 B5 + A5 B4 )
     ( 2 A3 B3 + A5 B3 + A3 B5 )
     ( C3 + A0 B3 + 2 B3 + B5 + A4 B3 + A3 B0 + 2 A3 B1 +
       A5 B1 + A3 B4 )
     ( C1 + A0 B1 + 2 B1 + A4 B1 + A2 B3 + B0 + A3 B2 + B4 )
     ( A2 B1 + B2 )
     ( A5 B3 + A3 B5 )
     ( B4 + A4 B1 ) )

   DILWR(F,VariableList).

   SetDIPAGBTraceFlag(2).

   (* Groebner basis computation with DIPAGB and normal strategy: *)

      SetDIPAGBStrategy(0).
      WriteDIPAGBOptions.
      DILWR(DIPAGB(F),VariableList).

   (* Groebner basis computation with DIPAGB, normal with sugar strategy
      and variable weight list (0,...,0): *)

      SetDIPAGBStrategy(1).
      SetDIPAGBVariableWeight(LIST(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)).
      WriteDIPAGBOptions.
      DILWR(DIPAGB(F),VariableList).

   (* Groebner basis computation with DIPAGB, normal with sugar strategy
      and variable weight list (1,...,1): *)

      r:=RNINT(1).
      SetDIPAGBVariableWeight(LIST(r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r,r)).
      WriteDIPAGBOptions.
      DILWR(DIPAGB(F),VariableList).

   (* Groebner basis computation with DIIFGB: *)

      SWRITE("Groebner Basis Computation with DIIFGB:").
      DILWR(DIIFGB(F,1),VariableList).

   SHUT("Gonnet.out").
   EXIT.

(* -EOF- *)
