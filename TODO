
- make logger variables also final

- make final variables public

- make hashCode to reuse computed value --> not immutable

- split ModInteger to ModularFactory! do so!

- make polynomial chinese remainder generic (?)

- define power(n) in RingElem and implement in classes

- rename getval() to getVal() in ExpVector

- let inverse() throw a checked exception

- check correct term order in recursive algorithms

- implement proxys for GB computation

- check solvable polynomials with non integral coefficients

- add assertions to check for number of polynomial variables and term order

- implement power series

- implement factorization

- implement matrices to vector

- refactor Hensel lifting to ufd

- use further util.concurrent algorithms where possible, e.g. in DHT

- add product category to applications

- refactor from BasicLinAlg to GenMatrix and GenVector 



- make exmaples with rational function field coefficients, 
  e.g. lisa-tdi example

- incorporate gcd() in the Quotient class in edu.jas.application

- rework junit tests to stop failing in case of zero polynomials



- implement BigDecimal with RingElem interface, done

- replace thread-and-network-programming algorithms with 
  util.concurrent, done

- implement multivariate gcd, done

- add methods to GenPolynomialRing to construct x_i polynomials, done

- split RingFactory to ElemFactory, done

- split AlgebraicNumber to AlgebraicFactory, done
